// Generated by Xata Codegen 0.29.4. Please do not edit.
import { buildClient } from '@xata.io/client';
import type { BaseClientOptions, SchemaInference, XataRecord } from '@xata.io/client';

const tables = [
  {
    name: 'users',
    columns: [
      {
        name: 'email',
        type: 'text',
        notNull: true,
        unique: false,
        defaultValue: null,
      },
      {
        name: 'first_name',
        type: 'text',
        notNull: true,
        unique: false,
        defaultValue: null,
      },
      {
        name: 'last_name',
        type: 'text',
        notNull: true,
        unique: false,
        defaultValue: null,
      },
      {
        name: 'xata_createdat',
        type: 'datetime',
        notNull: true,
        unique: false,
        defaultValue: 'now()',
      },
      {
        name: 'xata_id',
        type: 'text',
        notNull: true,
        unique: true,
        defaultValue: "('rec_'::text || (xata_private.xid())::text)",
      },
      {
        name: 'xata_updatedat',
        type: 'datetime',
        notNull: true,
        unique: false,
        defaultValue: 'now()',
      },
      {
        name: 'xata_version',
        type: 'int',
        notNull: true,
        unique: false,
        defaultValue: '0',
      },
    ],
  },
] as const;

export type SchemaTables = typeof tables;
export type InferredTypes = SchemaInference<SchemaTables>;

export type Users = InferredTypes['users'];
export type UsersRecord = Users & XataRecord;

export type DatabaseSchema = {
  users: UsersRecord;
};

const DatabaseClient = buildClient();

const defaultOptions = {
  databaseURL: 'https://Paul-Scanlon-s-workspace-k9noia.us-east-1.xata.sh/db/test-db',
};

export class XataClient extends DatabaseClient<DatabaseSchema> {
  constructor(options?: BaseClientOptions) {
    super({ ...defaultOptions, ...options }, tables);
  }
}

let instance: XataClient | undefined = undefined;

export const getXataClient = () => {
  if (instance) return instance;

  instance = new XataClient();
  return instance;
};
